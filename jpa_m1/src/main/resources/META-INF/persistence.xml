<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_1.xsd">


    <persistence-unit name="jpa_m1" transaction-type="RESOURCE_LOCAL">
        <!--5.2版本以后，无法使用HibernatePersistence-->
        <!--如果JPA项目中只有一个实现产品，可以配置这个节点-->
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        <!--<provider>org.hibernate.ejb.HibernatePersistence</provider>-->

        <!--添加持久化类-->
        <class>com.ifox.hgx.jpa.entity.Customer</class>
        <class>com.ifox.hgx.jpa.entity.Order</class>
        <class>com.ifox.hgx.jpa.entity.Manager</class>
        <class>com.ifox.hgx.jpa.entity.Department</class>
        <class>com.ifox.hgx.jpa.entity.Category</class>
        <class>com.ifox.hgx.jpa.entity.Item</class>

        <!--
		配置二级缓存的策略
		ALL：所有的实体类都被缓存
		NONE：所有的实体类都不被缓存.
		ENABLE_SELECTIVE：标识 @Cacheable(true) 注解的实体类将被缓存
		DISABLE_SELECTIVE：缓存除标识 @Cacheable(false) 以外的所有实体类
		UNSPECIFIED：默认值，JPA 产品默认值将被使用
		-->
        <!--<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>-->

        <properties>
            <!-- 连接数据库的基本信息 -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql:///jpa"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="123456"/>

            <!-- 配置 JPA 实现产品的基本属性. 配置 hibernate 的基本属性 -->
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>

            <!--&lt;!&ndash; 二级缓存相关 &ndash;&gt;-->
            <!--<property name="hibernate.cache.use_second_level_cache" value="true"/>-->
            <!--<property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.internal.EhCacheRegionFactory"/>-->
            <!--<property name="hibernate.cache.use_query_cache" value="true"/>-->

        </properties>
    </persistence-unit>

</persistence>
